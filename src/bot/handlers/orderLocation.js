const { User, Order } = require('../../models');
const { findNearestContractors } = require('../../services/contractorService');
const { notifyContractors } = require('../notifications');

const handleOrderLocation = async (msg) => {
  const chatId = msg.chat.id;
  const userState = global.userStates[chatId];

  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å –∏ –ø—Ä–æ—Å–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ
    await bot.sendMessage(
      chatId,
      '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ:\n' +
      '- –ß—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?\n' +
      '- –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è?\n' +
      '- –ö–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—ã?\n\n' +
      '–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ (–¥–æ 3 —à—Ç—É–∫).'
    );

    userState.step = 'enter_description';
  } catch (error) {
    console.error('Order location handler error:', error);
    await bot.sendMessage(
      chatId,
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    );
  }
};

const handleOrderDescription = async (msg) => {
  const chatId = msg.chat.id;
  const userState = global.userStates[chatId];

  try {
    userState.orderData.description = msg.text;
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    const orderSummary = 
      'üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:\n\n' +
      `üîß –¢–∏–ø —Ä–∞–±–æ—Ç: ${userState.orderData.type}\n` +
      `üìç –ê–¥—Ä–µ—Å: ${userState.orderData.address}\n` +
      `üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${userState.orderData.description}\n\n` +
      'üí∞ –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: 20% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç\n\n' +
      '–í—Å—ë –≤–µ—Ä–Ω–æ?';

    const keyboard = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: 'confirm_order' },
            { text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data: 'cancel_order' }
          ]
        ]
      }
    };

    await bot.sendMessage(chatId, orderSummary, keyboard);
    userState.step = 'confirm_order';
  } catch (error) {
    console.error('Order description handler error:', error);
    await bot.sendMessage(
      chatId,
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    );
  }
};

module.exports = {
  handleOrderLocation,
  handleOrderDescription
}; 