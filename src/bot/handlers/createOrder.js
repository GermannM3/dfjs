const { User, Order } = require('../../models');
const { findNearestContractors } = require('../../services/contractorService');

const handleCreateOrder = async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    const user = await User.findOne({
      where: { telegramId: chatId.toString() }
    });

    if (!user) {
      return bot.sendMessage(
        chatId,
        '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register'
      );
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    global.userStates[chatId] = {
      step: 'select_type',
      orderData: {}
    };

    const keyboard = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üî® –†–µ–º–æ–Ω—Ç', callback_data: 'order_type_repair' },
            { text: 'üèó –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', callback_data: 'order_type_construction' }
          ],
          [
            { text: 'üîß –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞', callback_data: 'order_type_plumbing' },
            { text: '‚ö°Ô∏è –≠–ª–µ–∫—Ç—Ä–∏–∫–∞', callback_data: 'order_type_electrical' }
          ]
        ]
      }
    };

    return bot.sendMessage(
      chatId,
      '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç:',
      keyboard
    );
  } catch (error) {
    console.error('Create order handler error:', error);
    return bot.sendMessage(
      chatId,
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    );
  }
};

const handleOrderTypeSelection = async (query) => {
  const chatId = query.message.chat.id;
  const type = query.data.split('_')[2];

  try {
    global.userStates[chatId].orderData = {
      type: type
    };
    global.userStates[chatId].step = 'enter_address';

    return bot.sendMessage(
      chatId,
      '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å —Ä–∞–±–æ—Ç –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:\n\n' +
      '1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n' +
      '2Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å —Ç–µ–∫—Å—Ç–æ–º\n\n' +
      '‚ùóÔ∏è –î–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel'
    );
  } catch (error) {
    console.error('Order type selection error:', error);
    return bot.sendMessage(
      chatId,
      '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    );
  }
};

module.exports = {
  handleCreateOrder,
  handleOrderTypeSelection
}; 